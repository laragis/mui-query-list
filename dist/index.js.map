{"version":3,"file":"index.js","sources":["../src/constants.js","../src/context.js","../src/hooks.js","../src/utils/fetchData.js","../src/components/QueryPagination/types/Simple.js","../src/components/QueryPagination/types/Advanced.js","../src/components/QueryPagination/types/Links.js","../src/components/QueryPagination/QueryPagination.js","../src/utils/detectReactObject.js","../src/components/QueryList/InfiniteQueryList.js","../src/components/QueryList/SimpleQueryList.js","../src/utils/formatNumber.js","../src/components/QueryPagination/types/LoadMore.js","../src/components/QueryPagination/types/InfiniteLoading.js","../src/utils/renderList.js","../src/components/QueryList/QueryList.js","../src/utils/renderListItem.js"],"sourcesContent":["export const SIMPLE = 'simple'\nexport const ADVANCED = 'advanced'\nexport const LOAD_MORE = 'load-more'\nexport const LINKS = 'links'\nexport const INFINITE_LOADING = 'infinite-loading'\n\nexport const PAGINATION_TYPES = {\n  [SIMPLE]: 'Simple',\n  [LINKS]: 'Links',\n  [ADVANCED]: 'Advanced',\n  [LOAD_MORE]: 'Load More',\n  [INFINITE_LOADING]: 'Infinite Loading',\n}","import create from 'zustand-store-addons'\nimport createContext from 'zustand/context'\nimport shallow from 'zustand/shallow'\nimport { SIMPLE } from './constants'\nimport produce from 'immer'\nimport { get } from 'lodash'\n\nconst initialState = {\n  pagination: SIMPLE,\n  queryKey: [],\n}\n\nexport const createStore = () => create((set, get) => ({\n  ...initialState,\n\n  init: (props) => {\n    let queryKey = [\n      props.queryKey,\n      {\n        url: props.url,\n        pagination: props.pagination,\n        params: {\n          page: props.page > 0 ? props.page : 1,\n          perPage: props.perPage > 0 ? props.perPage : 20,\n        }\n      }\n    ]\n\n    set({\n      queryKey,\n      pagination: props.pagination\n    })\n  },\n\n  setPage: (page) => set(\n    produce((state) => {\n      state.queryKey[1].params.page = page\n    })\n  ),\n\n  setPerPage: (perPage) => set(\n    produce((state) => {\n      state.queryKey[1].params.perPage = perPage\n    })\n  ),\n}), {\n  computed: {\n    perPage(){\n      return get(this.queryKey, `1.params.perPage`)\n    },\n\n    page(){\n      return get(this.queryKey, `1.params.page`)\n    }\n  }\n})\n\n\nconst context = createContext()\n\nexport const Provider = context.Provider\n\nexport const useStore = (selector, equalityFn) => {\n  return context.useStore(...stateHook(selector, equalityFn))\n}\n\nconst stateHook = (selector, equalityFn) => {\n  if (typeof selector === 'string') {\n    if (selector.indexOf(',') !== -1) {\n      const props = selector.split(',').map(part => part.trim())\n      return [state => props.map(prop => state[prop]), shallow]\n    }\n    return [state => state[selector], equalityFn]\n  }\n  return [selector, equalityFn]\n}\n\n\n// import axios from \"axios\";\n// import { defaultTo, includes, isString, mapKeys, mapValues } from 'lodash'\n// import { SIMPLE } from '../constants'\n//\n// // const requestWatchers = mapValues(mapKeys(['page', 'perPage']), (name) => function(newValue, preValue){\n// //   console.log(name, newValue, preValue);\n// //   this.get().fetchData()\n// // })\n//\n// const defaultPage = 1\n// const defaultPerPage = 10\n//\n// const useQueryStore = create(\n//   (set, get) => ({\n//     loading: false,\n//     setLoading: (loading) => set({ loading }),\n//\n//     url: null,\n//     setUrl: (url) => set({ url }),\n//\n//     pagination: SIMPLE,\n//     setPagination: (pagination) => set({ pagination }),\n//\n//     page: defaultPage,\n//     setPage: (payload) => {\n//       let page = parseInt(payload)\n//\n//       if(page > 0) set({ page })\n//       if(isNaN(page)) set({ page: defaultPage })\n//     },\n//\n//     perPage: defaultPerPage,\n//     setPerPage: (payload) => {\n//       let perPage = parseInt(payload)\n//\n//       if(perPage > 0) set({ perPage })\n//       if(isNaN(perPage)) set({ perPage: defaultPerPage })\n//     },\n//\n//     lastPage: null,\n//\n//     data: [],\n//     setData: (data) => set({ data }),\n//\n//     meta: null,\n//     links: null,\n//     setResponse: (resp) => {\n//       let meta = resp.meta,\n//           data = resp.data\n//\n//       if(includes(['load-more', 'infinite-loading'], get().pagination)) {\n//         meta.from = 1\n//         data = get().data.concat(data)\n//       }\n//\n//       set({\n//         meta,\n//         links: resp.links,\n//         data,\n//         lastPage: resp.meta.last_page\n//       })\n//     },\n//\n//     init: (props) => {\n//       let page = defaultTo(props.page, 1),\n//         perPage = props.perPage,\n//         pagination = defaultTo(props.pagination, 'simple'),\n//         initPage = page,\n//         initPerPage = perPage\n//\n//       if (pagination === 'load-more' && page > 1) {\n//         initPage = 1\n//         initPerPage = perPage * page\n//       }\n//\n//       set({\n//         url: props.url,\n//         page,\n//         perPage,\n//         pagination\n//       })\n//\n//       get().fetchData({\n//         page: initPage,\n//         perPage: initPerPage\n//       })\n//     },\n//\n//     reset: () => {\n//       set({\n//         page: 1,\n//         data: [],\n//       })\n//     },\n//\n//     fetchData: async (params) => {\n//       get().setLoading(true)\n//\n//       try {\n//         const response = await axios(get().getRequest(params)).then(resp => resp.data)\n//         get().setResponse(response)\n//       } catch (err){\n//         console.error(err);\n//       } finally {\n//         get().setLoading(false)\n//       }\n//     },\n//\n//     handleSuccess: null,\n//\n//     setHandleSuccess: (handleSuccess) => set({handleSuccess}),\n//\n//     nextPage: () => {\n//       get().hasNextPage && get().setPage(get().page+1)\n//     },\n//\n//     getRequest: (params = {}) => {\n//       const { page = get().page, perPage = get().perPage} = params\n//\n//       if(isString(get().url)) {\n//         return {\n//           method: 'get',\n//           url: get().url,\n//           params: {\n//             page,\n//             perPage\n//           }\n//         }\n//       }\n//\n//       return get().url\n//     },\n//   }),\n//   {\n//     computed: {\n//\n//       response: function() {\n//         return {\n//           meta: this.meta,\n//           links: this.links,\n//           data: this.data,\n//         }\n//       },\n//\n//       hasNextPage: function(){\n//         return this.page <= this.lastPage\n//       },\n//\n//       hasGoTo: function(){\n//         return this.page <= this.lastPage\n//       }\n//     },\n//     watchers: {\n//\n//     },\n//     middleware: [],\n//     settings: {},\n//   }\n// )\n//\n// export default useQueryStore","import { useQueryClient } from '@tanstack/react-query'\nimport { useStore } from './context'\nimport { useCallback, useEffect, useRef } from 'react'\nimport { debounce, isEmpty } from 'lodash'\nimport { useRafState } from 'react-use'\nimport $ from 'jquery'\n\nexport const useInit = (props) => {\n  const queryClient = useQueryClient()\n\n  const [queryKey, init] = useStore('queryKey, init')\n\n  useEffect(() => {\n    !isEmpty(queryKey) && queryClient.cancelQueries(queryKey)\n\n    init(props)\n  }, [props.queryKey, props.url, props.page, props.perPage])\n}\n\nexport const useScrollList = ({scrollTarget, scrollIndex, scrollTop, wait = 300}) => {\n  const ref = useRef()\n\n  const [position, setPostion] = useRafState({\n    x: 0,\n    y: 0,\n  });\n\n  const handler = useCallback((event) => {\n    let positionKeys = scrollTarget ? {x: 'scrollLeft', y: 'scrollTop'} : {x: 'pageXOffset', y: 'pageYOffset'}\n\n    setPostion({\n      x:  ref.current[positionKeys.x],\n      y:  ref.current[positionKeys.y],\n    });\n  }, [scrollTarget])\n\n  useEffect(() => {\n    ref.current = scrollTarget ? document.querySelector(scrollTarget) : window\n\n    ref.current.addEventListener('scroll', debounce(handler, wait));\n\n    return () => {\n      ref.current.removeEventListener('scroll', handler);\n    }\n\n  }, [])\n\n\n  useEffect(() => {\n    // console.log($(`#item-${scrollIndex}`).get(0), scrollIndex);\n    // let element = $(`#item-${scrollIndex}`).get(0)\n    // if(element) scrollIntoView(element, $(scrollTarget).get(0))\n\n    setTimeout(() => {\n      console.log(scrollTarget);\n      scrollTo($(scrollTarget).get(0))\n    }, 1000)\n    // console.log(scrollIndex);\n  }, [scrollIndex])\n\n  return position\n}","import { isString, isUndefined } from 'lodash'\nimport axios from 'axios'\n\nconst fetchData = async ({ meta, pageParam, queryKey, signal }) => {\n  const { url, params, ...rest } = queryKey[1]\n\n  const request = isString(url)\n    ? {\n        method: 'get',\n        ...params,\n      }\n    : {\n        params: {\n          ...params,\n          ...url?.params,\n        },\n        ...url,\n      }\n\n  if (!isUndefined(pageParam)) request.params.page = pageParam\n\n  const response = await axios({\n    signal,\n    ...request,\n  })\n\n  return response.data\n}\n\nexport default fetchData","import { Pagination as MuiPagination } from '@mui/material'\nimport { useStore } from '../../../context'\n\nfunction Simple({ meta }) {\n  const setPage = useStore('setPage')\n\n  const onChange = (event, value) => setPage(value)\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      showFirstButton\n      showLastButton\n      onChange={onChange}\n      count={meta?.last_page}\n      page={meta?.current_page}\n    />\n  )\n}\n\nexport default Simple","import {\n  MenuItem,\n  Pagination as MuiPagination,\n  Stack,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport React, { useMemo } from 'react'\nimport { useStore } from '../../../context'\nimport { flow, sortBy, uniq } from 'lodash'\n\nfunction Advanced({ meta, sizes, size }) {\n  const [perPage, setPerPage, setPage] = useStore(\n    'perPage, setPerPage, setPage'\n  )\n  const lastPage = meta?.last_page\n  const page = meta?.current_page\n\n  const onChange = (event, value) => setPage(value)\n\n  const handleGoto = (event) => {\n    let inputPage = parseInt(event.target.value)\n\n    if (\n      (event.key === 'Enter' || event.type === 'blur') &&\n      inputPage > 0 &&\n      inputPage !== page\n    ) {\n      if (inputPage <= lastPage) {\n        setPage(inputPage)\n      } else {\n        alert(`Not found page ${inputPage}`)\n      }\n    }\n  }\n\n  const handleSizeChange = (event) => setPerPage(parseInt(event.target.value))\n\n  const sizeList = useMemo(\n    () => flow([uniq, sortBy])(sizes.concat(size)),\n    [sizes, size]\n  )\n\n  console.log(sizeList)\n\n  return (\n    <Stack\n      direction=\"row\"\n      spacing={2}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <MuiPagination\n        variant=\"outlined\"\n        showFirstButton\n        showLastButton\n        shape=\"rounded\"\n        onChange={onChange}\n        count={lastPage}\n        page={page}\n      />\n      <TextField\n        select\n        label=\"Size\"\n        value={perPage}\n        onChange={handleSizeChange}\n        size=\"small\"\n        style={{ width: 110 }}\n      >\n        {sizeList.map((value, k) => (\n          <MenuItem key={k} value={value} defaultValue>\n            {value} / page\n          </MenuItem>\n        ))}\n      </TextField>\n      <Typography>Go to</Typography>\n      <TextField\n        label=\"Page\"\n        variant=\"outlined\"\n        onKeyUp={handleGoto}\n        onBlur={handleGoto}\n        size=\"small\"\n        type=\"number\"\n        style={{ width: 85 }}\n      />\n    </Stack>\n  )\n}\n\nAdvanced.defaultProps = {\n  sizes: [10, 20, 50, 100, 200]\n}\n\nexport default Advanced","import { Button, List } from '@mui/material'\nimport { usePagination } from '@mui/lab'\nimport { filter, includes } from 'lodash'\nimport { useStore } from '../../../context'\n\nfunction Links({ meta }) {\n  const setPage = useStore('setPage')\n\n  const { items } = usePagination({\n    count: meta?.last_page,\n    onChange: (event, value) => setPage(value),\n  })\n\n  const filteredItems = filter(items, (item) =>\n    includes(['previous', 'next'], item.type)\n  )\n\n  return (\n    <nav>\n      <List>\n        {filteredItems.map(({ page, type, selected, ...item }, index) => {\n          return (\n            <Button type=\"button\" {...item} key={index}>\n              {type}\n            </Button>\n          )\n        })}\n      </List>\n    </nav>\n  )\n}\n\nexport default Links","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { get } from 'lodash'\n\nimport Simple from './types/Simple'\nimport Advanced from './types/Advanced'\nimport LoadMore from './types/LoadMore'\nimport Links from './types/Links'\nimport InfiniteLoading from './types/InfiniteLoading'\nimport { ADVANCED, INFINITE_LOADING, LINKS, LOAD_MORE, SIMPLE } from '../../constants'\nimport { isFunctionComponent } from '../../utils/detectReactObject'\nimport { useStore } from '../../context'\n\nfunction QueryPagination(props) {\n  const type = useStore('pagination')\n\n  const Component = isFunctionComponent(type) ? type : get(QueryPagination.types, type, Simple)\n\n  return <Component {...props} />\n}\n\nQueryPagination.propTypes = {\n  type: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n}\n\nQueryPagination.types = {\n  [SIMPLE]: Simple,\n  [LINKS]: Links,\n  [ADVANCED]: Advanced,\n  [LOAD_MORE]: LoadMore,\n  [INFINITE_LOADING]: InfiniteLoading,\n}\n\nexport default QueryPagination;","import { isValidElement } from 'react'\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' && !!component.prototype?.isReactComponent\n  )\n}\n\nfunction isFunctionComponent(component) {\n  return (\n    typeof component === 'function' &&\n    // && !!String(component).includes('return React.createElement')  // may fails\n    isValidElement(component())\n  )\n}\n\nfunction isReactComponent(component) {\n  return isClassComponent(component) || isFunctionComponent(component)\n}\n\nfunction isElement(element) {\n  return isValidElement(element)\n}\n\nfunction isDOMTypeElement(element) {\n  return isElement(element) && typeof element.type === 'string'\n}\n\nfunction isCompositeTypeElement(element) {\n  return isElement(element) && typeof element.type === 'function'\n}\n\nexport {\n  isClassComponent,\n  isFunctionComponent,\n  isReactComponent,\n  isElement,\n  isDOMTypeElement,\n  isCompositeTypeElement,\n}","import { useInfiniteQuery } from '@tanstack/react-query'\nimport { InView } from 'react-intersection-observer'\nimport { has } from 'lodash'\nimport React, { Fragment } from 'react'\nimport { INFINITE_LOADING } from '../../constants'\nimport { Box, Button, LinearProgress, Stack } from '@mui/material'\nimport { useInit } from '../../hooks'\nimport { useStore } from '../../context'\nimport fetchData from '../../utils/fetchData'\nimport QueryPagination from '../QueryPagination/QueryPagination'\nimport { scrollTo } from 'scroll-js'\n\nfunction InfiniteQueryList(props) {\n  const { renderListItem: ListItem, renderList: List } = props\n\n  const queryKey = useStore('queryKey')\n\n  const queryInfo = useInfiniteQuery(queryKey, fetchData, {\n    getPreviousPageParam: (firstPage, allPages) => {\n      let previousPage = firstPage.meta.current_page - 1\n      return previousPage > 0 ? previousPage : undefined\n    },\n    getNextPageParam: (lastPage, allPages) => {\n      let nextPage = lastPage.meta.current_page + 1\n      return nextPage <= lastPage.meta.last_page ? nextPage : undefined\n    },\n  })\n\n  const {\n    status,\n    data,\n    error,\n    isFetching,\n    isFetchingNextPage,\n    isFetchingPreviousPage,\n    fetchNextPage,\n    fetchPreviousPage,\n    hasNextPage,\n    hasPreviousPage,\n  } = queryInfo\n\n  useInit(props)\n\n  const handleNextPage = (inView, entry, index) => {\n    if (inView && hasNextPage && !has(data, ['pages', index + 1])) {\n      fetchNextPage()\n    }\n  }\n\n  const onScrollTop = () => {\n    scrollTo(document.querySelector(props.scrollTarget) || window, {\n      top: 0,\n      duration: 200,\n    })\n  }\n\n  return (\n    <div>\n      {status === 'loading' ? (\n        <p>Loading...</p>\n      ) : status === 'error' ? (\n        <span>Error: {error.message}</span>\n      ) : (\n        <>\n          {props.page > 1 && (\n            <Button\n              className=\"mb-6\"\n              onClick={() => fetchPreviousPage()}\n              disabled={!hasPreviousPage || isFetchingPreviousPage}\n            >\n              {isFetchingPreviousPage\n                ? 'Loading more...'\n                : hasPreviousPage\n                ? 'Load Older'\n                : 'Nothing more to load'}\n            </Button>\n          )}\n\n          {data.pages?.map((page, pageIndex) => (\n            <Fragment key={pageIndex}>\n              {page.data.map((item, itemIndex) => {\n                let Component = List,\n                  serial = itemIndex + page.meta.from\n\n                if (\n                  props.pagination === INFINITE_LOADING &&\n                  props.threshold &&\n                  props.threshold > 0 &&\n                  props.threshold <= page.data.length &&\n                  page.data.length - props.threshold === itemIndex + 1\n                ) {\n                  Component = InView\n                }\n\n                return (\n                  <Box\n                    key={itemIndex}\n                    component={Component}\n                    onChange={(inView, entry) =>\n                      handleNextPage(inView, entry, pageIndex)\n                    }\n                  >\n                    <ListItem serial={serial} data={item} meta={page.meta} />\n                  </Box>\n                )\n              })}\n            </Fragment>\n          ))}\n\n          {props.backToTop && props.scrollPosition?.y > 400 && (\n            <Button\n              onClick={onScrollTop}\n              className=\"fixed\"\n              sx={{ bottom: 90, right: 100, zIndex: 100 }}\n              variant=\"outlined\"\n            >\n              <i className=\"fa-solid fa-arrow-up-to-line mr-10\"></i>\n              Back to top\n            </Button>\n          )}\n\n          <Stack direction=\"row\" justifyContent=\"center\">\n            <QueryPagination\n              queryInfo={queryInfo}\n              data={data}\n              threshold={props.threshold}\n            />\n          </Stack>\n\n          {isFetching && !isFetchingNextPage ? (\n            <Stack className=\"mt-6\" alignItems=\"center\" spacing={1}>\n              <p className=\"font-semibold\">Background Updating...</p>\n              <LinearProgress className=\"w-full\" color=\"secondary\" />\n            </Stack>\n          ) : null}\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default InfiniteQueryList","import { useQuery } from '@tanstack/react-query'\nimport { useStore } from '../../context'\nimport { useInit } from '../../hooks'\nimport fetchData from '../../utils/fetchData'\nimport QueryPagination from '../QueryPagination/QueryPagination'\nimport { Alert, LinearProgress, Stack } from '@mui/material'\nimport { useUpdateEffect } from 'react-use'\nimport $ from 'jquery'\n\nfunction SimpleQueryList(props) {\n  const { renderListItem: ListItem, renderList: List } = props\n\n  const queryKey = useStore('queryKey')\n\n  const queryInfo = useQuery(queryKey, fetchData, {\n    keepPreviousData: true,\n    staleTime: 5000,\n  })\n\n  const { isLoading, isSuccess, isFetching, error, data } = queryInfo\n\n  useInit(props)\n\n  useUpdateEffect(() => {\n    $(props.scrollTarget || window).scrollTop(0)\n  }, [data])\n\n  return (\n    <Stack spacing={1.5}>\n      {isLoading && <LinearProgress />}\n      {error?.message && (\n        <Alert variant=\"filled\" severity=\"error\">\n          {error?.message}\n        </Alert>\n      )}\n\n      {isSuccess && (\n        <>\n          <List meta={data?.meta}>\n            {data?.data?.map((item, k) => {\n              return (\n                <ListItem\n                  key={k}\n                  serial={data.meta.from + k}\n                  data={item}\n                  meta={data?.meta}\n                />\n              )\n            })}\n          </List>\n          {isFetching && <LinearProgress />}\n        </>\n      )}\n\n      {data?.meta && (\n        <QueryPagination\n          meta={data.meta}\n          size={props.perPage}\n          sizes={props.sizes}\n        />\n      )}\n    </Stack>\n  )\n}\n\nexport default SimpleQueryList","import numeral from 'numeral'\r\n\r\nfunction formatNumber(number, format = '0,0') {\r\n  return numeral(number).format(format)\r\n}\r\n\r\nexport default formatNumber","import { Button } from '@mui/material'\n\nfunction LoadMore({ queryInfo }) {\n  const { isFetchingNextPage, fetchNextPage, hasNextPage } = queryInfo || {}\n\n  if (!hasNextPage) return 'Nothing more to load'\n\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={() => fetchNextPage()}\n      disabled={!hasNextPage || isFetchingNextPage}\n    >\n      {isFetchingNextPage ? 'Loading more...' : 'Load More'}\n    </Button>\n  )\n}\n\nexport default LoadMore\n","import React from 'react'\nimport { Button, LinearProgress, Stack } from '@mui/material'\nimport { InView } from 'react-intersection-observer'\n\nfunction InfiniteLoading({ queryInfo, data, threshold }) {\n  const { isFetchingNextPage, fetchNextPage, hasNextPage } = queryInfo || {}\n\n  const handleNextPage = (inView) => inView && hasNextPage && fetchNextPage()\n\n  if (!hasNextPage) return 'Nothing more to load'\n\n  if (isFetchingNextPage)\n    return <LinearProgress className=\"w-full mt-12\" color=\"secondary\" />\n\n  if (threshold) return null\n\n  return (\n    <Stack alignItems=\"center\">\n      <InView\n        as={Button}\n        onClick={() => fetchNextPage()}\n        disabled={!hasNextPage || isFetchingNextPage}\n        onChange={handleNextPage}\n      >\n        Load More\n      </InView>\n    </Stack>\n  )\n}\n\nexport default InfiniteLoading","import formatNumber from './formatNumber'\r\nimport { Divider, Stack } from '@mui/material'\r\n\r\nfunction renderList({ children, meta, ...props }) {\r\n  return (\r\n    <Stack spacing={1}>\r\n      <div>\r\n        Kết quả từ {formatNumber(meta.from)}-{formatNumber(meta.to)} trong số{' '}\r\n        {formatNumber(meta.total)}\r\n      </div>\r\n\r\n      <Stack\r\n        spacing={2}\r\n        divider={<Divider orientation=\"horizontal\" />}\r\n        sx={{ py: 2 }}\r\n      >\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default renderList","import { includes } from 'lodash'\nimport { INFINITE_LOADING, LOAD_MORE, SIMPLE } from '../../constants'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport InfiniteQueryList from './InfiniteQueryList'\nimport SimpleQueryList from './SimpleQueryList'\nimport { createStore, Provider } from '../../context'\nimport renderListItem from '../../utils/renderListItem'\nimport renderList from '../../utils/renderList'\nimport { useScrollList } from '../../hooks'\n\nfunction QueryList(props) {\n  const scrollPosition = useScrollList(props)\n\n  return (\n    <Provider createStore={createStore}>\n      {includes([LOAD_MORE, INFINITE_LOADING], props.pagination) ? (\n        <InfiniteQueryList {...props} scrollPosition={scrollPosition} />\n      ) : (\n        <SimpleQueryList {...props} scrollPosition={scrollPosition} />\n      )}\n    </Provider>\n  )\n}\n\nQueryList.propTypes = {\n  queryKey: PropTypes.string,\n  url: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  pagination: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  page: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  perPage: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  select: PropTypes.func,\n  threshold: PropTypes.number,\n\n  scrollTop: PropTypes.bool,\n  scrollTarget: PropTypes.string,\n}\n\nQueryList.defaultProps = {\n  pagination: SIMPLE,\n  page: 1,\n  perPage: 10,\n  renderListItem: renderListItem,\n  renderList: renderList,\n  backToTop: false\n}\n\nexport default QueryList\n","function renderListItem({serial, data}){\r\n  return (\r\n    <div>\r\n      {serial}) {data.id}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default renderListItem"],"names":["PAGINATION_TYPES","_PAGINATION_TYPES","LINKS","INFINITE_LOADING","initialState","pagination","queryKey","createStore","create","set","get","_extends","init","props","url","params","page","perPage","setPage","produce","state","setPerPage","computed","this","context","createContext","Provider","useStore","selector","equalityFn","apply","stateHook","indexOf","split","map","part","trim","prop","shallow","useInit","queryClient","useQueryClient","_useStore","useEffect","isEmpty","cancelQueries","fetchData","meta","pageParam","signal","_ref","_queryKey$","request","_objectWithoutPropertiesLoose","_excluded","isString","method","isUndefined","axios","response","data","e","Promise","reject","Simple","React","createElement","MuiPagination","variant","showFirstButton","showLastButton","onChange","event","value","count","last_page","current_page","Advanced","sizes","size","lastPage","handleGoto","inputPage","parseInt","target","key","type","alert","sizeList","useMemo","flow","uniq","sortBy","concat","console","log","Stack","direction","spacing","alignItems","justifyContent","shape","TextField","select","label","style","width","k","MenuItem","defaultValue","Typography","onKeyUp","onBlur","defaultProps","_QueryPagination$type","component","Component","isValidElement","QueryPagination","types","_data$pages","_props$scrollPosition","ListItem","renderListItem","List","renderList","queryInfo","useInfiniteQuery","getPreviousPageParam","firstPage","allPages","previousPage","undefined","getNextPageParam","nextPage","status","error","isFetching","isFetchingNextPage","isFetchingPreviousPage","fetchNextPage","fetchPreviousPage","hasNextPage","hasPreviousPage","message","Button","className","onClick","disabled","pages","pageIndex","Fragment","item","itemIndex","threshold","length","InView","Box","inView","entry","index","has","serial","from","backToTop","y","scrollPosition","scrollTo","document","querySelector","scrollTarget","window","top","duration","sx","bottom","right","zIndex","LinearProgress","color","SimpleQueryList","_data$data","useQuery","keepPreviousData","staleTime","isLoading","isSuccess","useUpdateEffect","$","scrollTop","Alert","severity","formatNumber","number","format","numeral","propTypes","PropTypes","oneOfType","string","func","usePagination","filteredItems","filter","items","includes","_ref2","LOAD_MORE","as","QueryList","scrollIndex","wait","ref","useRafState","position","setPostion","handler","_ref$wait","useRef","x","useCallback","positionKeys","current","addEventListener","debounce","removeEventListener","setTimeout","InfiniteQueryList","object","bool","id","children","to","total","divider","Divider","orientation","py"],"mappings":"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"}