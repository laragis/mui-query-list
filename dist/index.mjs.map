{"version":3,"file":"index.mjs","sources":["../src/constants.js","../src/context.js","../src/hooks.js","../src/utils/fetchData.js","../src/components/QueryPagination/types/Simple.js","../src/components/QueryPagination/types/Advanced.js","../src/components/QueryPagination/types/Links.js","../src/components/QueryPagination/QueryPagination.js","../src/utils/detectReactObject.js","../src/components/QueryPagination/types/LoadMore.js","../src/components/QueryPagination/types/InfiniteLoading.js","../src/components/QueryList/InfiniteQueryList.js","../src/components/QueryList/SimpleQueryList.js","../src/utils/formatNumber.js","../src/utils/renderList.js","../src/components/QueryList/QueryList.js","../src/utils/renderListItem.js"],"sourcesContent":["export const SIMPLE = 'simple'\nexport const ADVANCED = 'advanced'\nexport const LOAD_MORE = 'load-more'\nexport const LINKS = 'links'\nexport const INFINITE_LOADING = 'infinite-loading'\n\nexport const PAGINATION_TYPES = {\n  [SIMPLE]: 'Simple',\n  [LINKS]: 'Links',\n  [ADVANCED]: 'Advanced',\n  [LOAD_MORE]: 'Load More',\n  [INFINITE_LOADING]: 'Infinite Loading',\n}","import create from 'zustand-store-addons'\nimport createContext from 'zustand/context'\nimport shallow from 'zustand/shallow'\nimport { SIMPLE } from './constants'\nimport produce from 'immer'\nimport { get } from 'lodash'\n\n\nexport const createStore = () => create((set, get) => ({\n  pagination: SIMPLE,\n  queryKey: [],\n\n  init: (props) => {\n    let queryKey = [\n      props.queryKey,\n      {\n        url: props.url,\n        pagination: props.pagination,\n        params: {\n          page: props.page > 0 ? props.page : 1,\n          perPage: props.perPage > 0 ? props.perPage : 20,\n        }\n      }\n    ]\n\n    set({\n      queryKey,\n      pagination: props.pagination,\n      selected: false\n    })\n  },\n\n  selected: false,\n  setSelected: selected => set({selected}),\n\n  setPage: (page) => set(\n    produce((state) => {\n      state.queryKey[1].params.page = page\n    })\n  ),\n\n  setPerPage: (perPage) => set(\n    produce((state) => {\n      state.queryKey[1].params.perPage = perPage\n    })\n  ),\n}), {\n  computed: {\n    perPage(){\n      return get(this.queryKey, `1.params.perPage`)\n    },\n\n    page(){\n      return get(this.queryKey, `1.params.page`)\n    }\n  }\n})\n\n\nconst context = createContext()\n\nexport const Provider = context.Provider\n\nexport const useStore = (selector, equalityFn) => {\n  return context.useStore(...stateHook(selector, equalityFn))\n}\n\nconst stateHook = (selector, equalityFn) => {\n  if (typeof selector === 'string') {\n    if (selector.indexOf(',') !== -1) {\n      const props = selector.split(',').map(part => part.trim())\n      return [state => props.map(prop => state[prop]), shallow]\n    }\n    return [state => state[selector], equalityFn]\n  }\n  return [selector, equalityFn]\n}\n\n\n// import axios from \"axios\";\n// import { defaultTo, includes, isString, mapKeys, mapValues } from 'lodash'\n// import { SIMPLE } from '../constants'\n//\n// // const requestWatchers = mapValues(mapKeys(['page', 'perPage']), (name) => function(newValue, preValue){\n// //   console.log(name, newValue, preValue);\n// //   this.get().fetchData()\n// // })\n//\n// const defaultPage = 1\n// const defaultPerPage = 10\n//\n// const useQueryStore = create(\n//   (set, get) => ({\n//     loading: false,\n//     setLoading: (loading) => set({ loading }),\n//\n//     url: null,\n//     setUrl: (url) => set({ url }),\n//\n//     pagination: SIMPLE,\n//     setPagination: (pagination) => set({ pagination }),\n//\n//     page: defaultPage,\n//     setPage: (payload) => {\n//       let page = parseInt(payload)\n//\n//       if(page > 0) set({ page })\n//       if(isNaN(page)) set({ page: defaultPage })\n//     },\n//\n//     perPage: defaultPerPage,\n//     setPerPage: (payload) => {\n//       let perPage = parseInt(payload)\n//\n//       if(perPage > 0) set({ perPage })\n//       if(isNaN(perPage)) set({ perPage: defaultPerPage })\n//     },\n//\n//     lastPage: null,\n//\n//     data: [],\n//     setData: (data) => set({ data }),\n//\n//     meta: null,\n//     links: null,\n//     setResponse: (resp) => {\n//       let meta = resp.meta,\n//           data = resp.data\n//\n//       if(includes(['load-more', 'infinite-loading'], get().pagination)) {\n//         meta.from = 1\n//         data = get().data.concat(data)\n//       }\n//\n//       set({\n//         meta,\n//         links: resp.links,\n//         data,\n//         lastPage: resp.meta.last_page\n//       })\n//     },\n//\n//     init: (props) => {\n//       let page = defaultTo(props.page, 1),\n//         perPage = props.perPage,\n//         pagination = defaultTo(props.pagination, 'simple'),\n//         initPage = page,\n//         initPerPage = perPage\n//\n//       if (pagination === 'load-more' && page > 1) {\n//         initPage = 1\n//         initPerPage = perPage * page\n//       }\n//\n//       set({\n//         url: props.url,\n//         page,\n//         perPage,\n//         pagination\n//       })\n//\n//       get().fetchData({\n//         page: initPage,\n//         perPage: initPerPage\n//       })\n//     },\n//\n//     reset: () => {\n//       set({\n//         page: 1,\n//         data: [],\n//       })\n//     },\n//\n//     fetchData: async (params) => {\n//       get().setLoading(true)\n//\n//       try {\n//         const response = await axios(get().getRequest(params)).then(resp => resp.data)\n//         get().setResponse(response)\n//       } catch (err){\n//         console.error(err);\n//       } finally {\n//         get().setLoading(false)\n//       }\n//     },\n//\n//     handleSuccess: null,\n//\n//     setHandleSuccess: (handleSuccess) => set({handleSuccess}),\n//\n//     nextPage: () => {\n//       get().hasNextPage && get().setPage(get().page+1)\n//     },\n//\n//     getRequest: (params = {}) => {\n//       const { page = get().page, perPage = get().perPage} = params\n//\n//       if(isString(get().url)) {\n//         return {\n//           method: 'get',\n//           url: get().url,\n//           params: {\n//             page,\n//             perPage\n//           }\n//         }\n//       }\n//\n//       return get().url\n//     },\n//   }),\n//   {\n//     computed: {\n//\n//       response: function() {\n//         return {\n//           meta: this.meta,\n//           links: this.links,\n//           data: this.data,\n//         }\n//       },\n//\n//       hasNextPage: function(){\n//         return this.page <= this.lastPage\n//       },\n//\n//       hasGoTo: function(){\n//         return this.page <= this.lastPage\n//       }\n//     },\n//     watchers: {\n//\n//     },\n//     middleware: [],\n//     settings: {},\n//   }\n// )\n//\n// export default useQueryStore","import { useQueryClient } from '@tanstack/react-query'\nimport { useStore } from './context'\nimport { useCallback, useEffect, useRef } from 'react'\nimport { debounce, isEmpty } from 'lodash'\nimport { useDeepCompareEffect, useRafState } from 'react-use'\nimport $ from 'jquery'\n\nexport const useInit = (props) => {\n  const queryClient = useQueryClient()\n\n  const [queryKey, init] = useStore('queryKey, init')\n\n  useDeepCompareEffect(() => {\n    !isEmpty(queryKey) && queryClient.cancelQueries(queryKey)\n\n    init(props)\n  }, [props.queryKey, props.url, props.page, props.perPage])\n}\n\nexport const useScrollList = ({scrollTarget, scrollIndex, scrollTop, wait = 300}) => {\n  const ref = useRef()\n\n  const [position, setPostion] = useRafState({\n    x: 0,\n    y: 0,\n  });\n\n  const handler = useCallback((event) => {\n    let positionKeys = scrollTarget ? {x: 'scrollLeft', y: 'scrollTop'} : {x: 'pageXOffset', y: 'pageYOffset'}\n\n    setPostion({\n      x:  ref.current[positionKeys.x],\n      y:  ref.current[positionKeys.y],\n    });\n  }, [scrollTarget])\n\n  useEffect(() => {\n    ref.current = scrollTarget ? document.querySelector(scrollTarget) : window\n\n    ref.current.addEventListener('scroll', debounce(handler, wait));\n\n    return () => {\n      ref.current.removeEventListener('scroll', handler);\n    }\n\n  }, [])\n\n\n  useEffect(() => {\n    // console.log($(`#item-${scrollIndex}`).get(0), scrollIndex);\n    // let element = $(`#item-${scrollIndex}`).get(0)\n    // if(element) scrollIntoView(element, $(scrollTarget).get(0))\n\n    setTimeout(() => {\n      scrollTo($(scrollTarget).get(0))\n    }, 1000)\n    // console.log(scrollIndex);\n  }, [scrollIndex])\n\n  return position\n}","import { isString, isUndefined } from 'lodash'\nimport axios from 'axios'\n\nconst fetchData = async ({ meta, pageParam, queryKey, signal }) => {\n  const { url, params, ...rest } = queryKey[1]\n\n  const request = isString(url)\n    ? {\n        method: 'get',\n        ...params,\n      }\n    : {\n        params: {\n          ...params,\n          ...url?.params,\n        },\n        ...url,\n      }\n\n  if (!isUndefined(pageParam)) request.params.page = pageParam\n\n  const response = await axios({\n    signal,\n    ...request,\n  })\n\n  return response.data\n}\n\nexport default fetchData","import React from 'react'\nimport { Pagination as MuiPagination } from '@mui/material'\nimport { useStore } from '../../../context'\n\nfunction Simple({ meta }) {\n  const setPage = useStore('setPage')\n\n  const onChange = (event, value) => setPage(value)\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      showFirstButton\n      showLastButton\n      onChange={onChange}\n      count={meta?.last_page}\n      page={meta?.current_page}\n    />\n  )\n}\n\nexport default Simple","import {\n  MenuItem,\n  Pagination as MuiPagination,\n  Stack,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport React, { useMemo } from 'react'\nimport { useStore } from '../../../context'\nimport { flow, sortBy, uniq } from 'lodash'\n\nfunction Advanced({ meta, sizes, size }) {\n  const [perPage, setPerPage, setPage] = useStore(\n    'perPage, setPerPage, setPage'\n  )\n  const lastPage = meta?.last_page\n  const page = meta?.current_page\n\n  const onChange = (event, value) => setPage(value)\n\n  const handleGoto = (event) => {\n    let inputPage = parseInt(event.target.value)\n\n    if (\n      (event.key === 'Enter' || event.type === 'blur') &&\n      inputPage > 0 &&\n      inputPage !== page\n    ) {\n      if (inputPage <= lastPage) {\n        setPage(inputPage)\n      } else {\n        alert(`Not found page ${inputPage}`)\n      }\n    }\n  }\n\n  const handleSizeChange = (event) => setPerPage(parseInt(event.target.value))\n\n  const sizeList = useMemo(\n    () => flow([uniq, sortBy])(sizes.concat(size)),\n    [sizes, size]\n  )\n\n  console.log(sizeList)\n\n  return (\n    <Stack\n      direction=\"row\"\n      spacing={2}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <MuiPagination\n        variant=\"outlined\"\n        showFirstButton\n        showLastButton\n        shape=\"rounded\"\n        onChange={onChange}\n        count={lastPage}\n        page={page}\n      />\n      <TextField\n        select\n        label=\"Size\"\n        value={perPage}\n        onChange={handleSizeChange}\n        size=\"small\"\n        style={{ width: 110 }}\n      >\n        {sizeList.map((value, k) => (\n          <MenuItem key={k} value={value} defaultValue>\n            {value} / page\n          </MenuItem>\n        ))}\n      </TextField>\n      <Typography>Go to</Typography>\n      <TextField\n        label=\"Page\"\n        variant=\"outlined\"\n        onKeyUp={handleGoto}\n        onBlur={handleGoto}\n        size=\"small\"\n        type=\"number\"\n        style={{ width: 85 }}\n      />\n    </Stack>\n  )\n}\n\nAdvanced.defaultProps = {\n  sizes: [10, 20, 50, 100, 200],\n}\n\nexport default Advanced\n","import React from 'react'\nimport { Button, List } from '@mui/material'\nimport { usePagination } from '@mui/lab'\nimport { filter, includes } from 'lodash'\nimport { useStore } from '../../../context'\n\nfunction Links({ meta }) {\n  const setPage = useStore('setPage')\n\n  const { items } = usePagination({\n    count: meta?.last_page,\n    onChange: (event, value) => setPage(value),\n  })\n\n  const filteredItems = filter(items, (item) =>\n    includes(['previous', 'next'], item.type)\n  )\n\n  return (\n    <nav>\n      <List>\n        {filteredItems.map(({ page, type, selected, ...item }, index) => {\n          return (\n            <Button type=\"button\" {...item} key={index}>\n              {type}\n            </Button>\n          )\n        })}\n      </List>\n    </nav>\n  )\n}\n\nexport default Links","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { get } from 'lodash'\n\nimport Simple from './types/Simple'\nimport Advanced from './types/Advanced'\nimport LoadMore from './types/LoadMore'\nimport Links from './types/Links'\nimport InfiniteLoading from './types/InfiniteLoading'\nimport { ADVANCED, INFINITE_LOADING, LINKS, LOAD_MORE, SIMPLE } from '../../constants'\nimport { isFunctionComponent } from '../../utils/detectReactObject'\nimport { useStore } from '../../context'\n\nfunction QueryPagination(props) {\n  const type = useStore('pagination')\n\n  const Component = isFunctionComponent(type) ? type : get(QueryPagination.types, type, Simple)\n\n  return <Component {...props} />\n}\n\nQueryPagination.propTypes = {\n  type: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n}\n\nQueryPagination.types = {\n  [SIMPLE]: Simple,\n  [LINKS]: Links,\n  [ADVANCED]: Advanced,\n  [LOAD_MORE]: LoadMore,\n  [INFINITE_LOADING]: InfiniteLoading,\n}\n\nexport default QueryPagination;","import { isValidElement } from 'react'\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' && !!component.prototype?.isReactComponent\n  )\n}\n\nfunction isFunctionComponent(component) {\n  return (\n    typeof component === 'function' &&\n    // && !!String(component).includes('return React.createElement')  // may fails\n    isValidElement(component())\n  )\n}\n\nfunction isReactComponent(component) {\n  return isClassComponent(component) || isFunctionComponent(component)\n}\n\nfunction isElement(element) {\n  return isValidElement(element)\n}\n\nfunction isDOMTypeElement(element) {\n  return isElement(element) && typeof element.type === 'string'\n}\n\nfunction isCompositeTypeElement(element) {\n  return isElement(element) && typeof element.type === 'function'\n}\n\nexport {\n  isClassComponent,\n  isFunctionComponent,\n  isReactComponent,\n  isElement,\n  isDOMTypeElement,\n  isCompositeTypeElement,\n}","import React from 'react'\nimport { Button } from '@mui/material'\n\nfunction LoadMore({ queryInfo }) {\n  const { isFetchingNextPage, fetchNextPage, hasNextPage } = queryInfo || {}\n\n  if (!hasNextPage) return 'Nothing more to load'\n\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={() => fetchNextPage()}\n      disabled={!hasNextPage || isFetchingNextPage}\n    >\n      {isFetchingNextPage ? 'Loading more...' : 'Load More'}\n    </Button>\n  )\n}\n\nexport default LoadMore\n","import React from 'react'\nimport { Button, LinearProgress, Stack } from '@mui/material'\nimport { InView } from 'react-intersection-observer'\n\nfunction InfiniteLoading({ queryInfo, data, threshold }) {\n  const { isFetchingNextPage, fetchNextPage, hasNextPage } = queryInfo || {}\n\n  const handleNextPage = (inView) => inView && hasNextPage && fetchNextPage()\n\n  if (!hasNextPage) return 'Nothing more to load'\n\n  if (isFetchingNextPage)\n    return <LinearProgress className=\"w-full mt-12\" color=\"secondary\" />\n\n  if (threshold) return null\n\n  return (\n    <Stack alignItems=\"center\">\n      <InView\n        as={Button}\n        onClick={() => fetchNextPage()}\n        disabled={!hasNextPage || isFetchingNextPage}\n        onChange={handleNextPage}\n      >\n        Load More\n      </InView>\n    </Stack>\n  )\n}\n\nexport default InfiniteLoading","import { useInfiniteQuery } from '@tanstack/react-query'\nimport { InView } from 'react-intersection-observer'\nimport { get, has, keys, omit } from 'lodash'\nimport React, { forwardRef, Fragment, useEffect, useMemo } from 'react'\nimport { INFINITE_LOADING } from '../../constants'\nimport { Box, Button, LinearProgress, Stack } from '@mui/material'\nimport { useInit } from '../../hooks'\nimport { useStore } from '../../context'\nimport fetchData from '../../utils/fetchData'\nimport QueryPagination from '../QueryPagination/QueryPagination'\nimport { scrollTo } from 'scroll-js'\nimport ListItem from '../../utils/renderListItem'\n\nconst InfiniteQueryList = forwardRef((props, ref) => {\n  const { renderListItem: ListItem, renderList: List, wrapperListItem, onRowClicked } = props\n\n  const [queryKey, selected, setSelected] = useStore('queryKey, selected, setSelected')\n\n  const queryInfo = useInfiniteQuery(queryKey, fetchData, {\n    getPreviousPageParam: (firstPage, allPages) => {\n      let previousPage = firstPage.meta.current_page - 1\n      return previousPage > 0 ? previousPage : undefined\n    },\n    getNextPageParam: (lastPage, allPages) => {\n      let nextPage = lastPage.meta.current_page + 1\n      return nextPage <= lastPage.meta.last_page ? nextPage : undefined\n    },\n  })\n\n  const {\n    status,\n    data,\n    error,\n    isFetching,\n    isFetchingNextPage,\n    isFetchingPreviousPage,\n    fetchNextPage,\n    fetchPreviousPage,\n    hasNextPage,\n    hasPreviousPage,\n  } = queryInfo\n\n  useInit(props)\n\n  const handleNextPage = (inView, entry, index) => {\n    if (inView && hasNextPage && !has(data, ['pages', index + 1])) {\n      fetchNextPage()\n    }\n  }\n\n  const onScrollTop = () => {\n    scrollTo(document.querySelector(props.scrollTarget) || window, {\n      top: 0,\n      duration: 200,\n    })\n  }\n\n  const firstRow = useMemo(() => get(data, 'pages.0.data.0'), [get(data, 'pages.0.data.0')])\n\n  useEffect(() => {\n    // console.log(ref)\n  }, [])\n\n  return (\n    <div>\n      {status === 'loading' ? (\n        <LinearProgress className=\"w-full\" color=\"primary\" />\n      ) : status === 'error' ? (\n        <span>Error: {error.message}</span>\n      ) : (\n        <>\n          {props.page > 1 && (\n            <Button\n              className=\"mb-6\"\n              onClick={() => fetchPreviousPage()}\n              disabled={!hasPreviousPage || isFetchingPreviousPage}\n            >\n              {isFetchingPreviousPage\n                ? 'Loading more...'\n                : hasPreviousPage\n                  ? 'Load Older'\n                  : 'Nothing more to load'}\n            </Button>\n          )}\n\n          <List meta={data?.meta} firstRow={firstRow} aaa={123}>\n            {data.pages?.map((page, pageIndex) => (\n              <Fragment key={pageIndex}>\n                {page.data.map((item, itemIndex) => {\n                  let serial = itemIndex + page.meta.from,\n                    hasInView = (\n                      props.pagination === INFINITE_LOADING &&\n                      props.threshold &&\n                      props.threshold > 0 &&\n                      props.threshold <= page.data.length &&\n                      page.data.length - props.threshold === itemIndex + 1\n                    ),\n                    onChange = (inView, entry) => handleNextPage(inView, entry, pageIndex),\n                    wrapperListItemProps = {\n                      key: itemIndex,\n                      component: hasInView ? InView : Box,\n                      onChange\n                    },\n                    listItemProps = {\n                      serial,\n                      data: item,\n                      meta: page.meta,\n                      onRowClicked: (e, data) => {\n                        let itemSelected = selected === serial ? false : serial\n\n                        setSelected(itemSelected)\n                        onRowClicked(e, { item: data, selected: itemSelected })\n                      },\n                      selected: serial === selected,\n                      setSelected\n                    }\n\n                  if(!wrapperListItem) return <ListItem key={itemIndex} {...listItemProps} />\n\n                  return (\n                    <Box {...wrapperListItemProps}>\n                      <ListItem {...listItemProps} />\n                    </Box>\n                  )\n                })}\n              </Fragment>\n            ))}\n          </List>\n\n\n\n          {props.backToTop && props.scrollPosition?.y > 400 && (\n            <Button\n              onClick={onScrollTop}\n              className=\"fixed\"\n              sx={{ bottom: 90, right: 100, zIndex: 100 }}\n              variant=\"outlined\"\n            >\n              <i className=\"fa-solid fa-arrow-up-to-line mr-10\"></i>\n              Back to top\n            </Button>\n          )}\n\n          <Stack direction=\"row\" justifyContent=\"center\">\n            <QueryPagination\n              queryInfo={queryInfo}\n              data={data}\n              threshold={props.threshold}\n            />\n          </Stack>\n\n          {isFetching && !isFetchingNextPage ? (\n            <Stack className=\"mt-6\" alignItems=\"center\" spacing={1}>\n              <p className=\"font-semibold\">Background Updating...</p>\n              <LinearProgress className=\"w-full\" color=\"primary\" />\n            </Stack>\n          ) : null}\n        </>\n      )}\n    </div>\n  )\n})\n\nInfiniteQueryList.defaultProps = {\n  wrapperListItem: true\n}\n\nexport default InfiniteQueryList","import React, { Fragment, useMemo } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport { useStore } from '../../context'\nimport { useInit } from '../../hooks'\nimport fetchData from '../../utils/fetchData'\nimport QueryPagination from '../QueryPagination/QueryPagination'\nimport { Alert, LinearProgress, Stack } from '@mui/material'\nimport { useUpdateEffect } from 'react-use'\nimport $ from 'jquery'\nimport { get } from 'lodash'\n\nfunction SimpleQueryList(props) {\n  const { renderListItem: ListItem, renderList: List, onRowClicked } = props\n\n  const [queryKey, selected, setSelected] = useStore('queryKey, selected, setSelected')\n\n  const queryInfo = useQuery(queryKey, fetchData, {\n    keepPreviousData: true,\n    staleTime: 5000,\n  })\n\n  const { isLoading, isSuccess, isFetching, error, data } = queryInfo\n\n  useInit(props)\n\n  useUpdateEffect(() => {\n    $(props.scrollTarget || window).scrollTop(0)\n  }, [data])\n\n  const firstRow = useMemo(() => get(data, 'data.0'), [get(data, 'data.0')])\n\n  return (\n    <Stack spacing={1.5}>\n      {isLoading && <LinearProgress />}\n      {error?.message && (\n        <Alert variant=\"filled\" severity=\"error\">\n          {error?.message}\n        </Alert>\n      )}\n\n      {isSuccess && (\n        <>\n          <List meta={data?.meta} firstRow={firstRow}>\n            {data?.data?.map((item, key) => {\n              let serial = data.meta.from + key,\n                  listItemProps = {\n                  key,\n                  serial: data.meta.from + key,\n                  data: item,\n                  meta: data?.meta,\n                  onRowClicked: (e, data) => {\n                    let itemSelected = selected === serial ? false : serial\n                    setSelected(itemSelected)\n                    onRowClicked(e, { item, selected: itemSelected })\n                  },\n              }\n\n              return <ListItem {...listItemProps}/>\n            })}\n          </List>\n          {isFetching && <LinearProgress />}\n        </>\n      )}\n\n      {data?.meta && (\n        <QueryPagination\n          meta={data.meta}\n          size={props.perPage}\n          sizes={props.sizes}\n        />\n      )}\n    </Stack>\n  )\n}\n\nexport default SimpleQueryList","import numeral from 'numeral'\r\n\r\nfunction formatNumber(number, format = '0,0') {\r\n  return numeral(number).format(format)\r\n}\r\n\r\nexport default formatNumber","import formatNumber from './formatNumber'\r\nimport { Divider, Stack } from '@mui/material'\r\n\r\nfunction renderList({ children, meta, ...props }) {\r\n  return (\r\n    <Stack spacing={1}>\r\n      <div>\r\n        Kết quả từ {formatNumber(meta.from)}-{formatNumber(meta.to)} trong số{' '}\r\n        {formatNumber(meta.total)}\r\n      </div>\r\n\r\n      <Stack\r\n        spacing={2}\r\n        divider={<Divider orientation=\"horizontal\" />}\r\n        sx={{ py: 2 }}\r\n      >\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default renderList","import { includes } from 'lodash'\nimport { INFINITE_LOADING, LOAD_MORE, SIMPLE } from '../../constants'\nimport React, { forwardRef, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport InfiniteQueryList from './InfiniteQueryList'\nimport SimpleQueryList from './SimpleQueryList'\nimport { createStore, Provider } from '../../context'\nimport { useScrollList } from '../../hooks'\nimport renderListItem from '../../utils/renderListItem'\nimport renderList from '../../utils/renderList'\n\nconst QueryList = forwardRef((props, ref) => {\n  const scrollPosition = useScrollList(props)\n\n  const queryListProps = {\n    ...props,\n    scrollPosition\n  }\n\n  return (\n    <Provider createStore={createStore}>\n      {includes([LOAD_MORE, INFINITE_LOADING], props.pagination) ? (\n        <InfiniteQueryList ref={ref} {...queryListProps} />\n      ) : (\n        <SimpleQueryList ref={ref} {...queryListProps} />\n      )}\n    </Provider>\n  )\n})\n\nQueryList.propTypes = {\n  queryKey: PropTypes.string,\n  url: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  pagination: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  page: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  perPage: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  select: PropTypes.func,\n  threshold: PropTypes.number,\n\n  scrollTop: PropTypes.bool,\n  scrollTarget: PropTypes.string,\n}\n\nQueryList.defaultProps = {\n  pagination: SIMPLE,\n  page: 1,\n  perPage: 10,\n  renderListItem: renderListItem,\n  renderList: renderList,\n  backToTop: false,\n  onRowClicked: () => {}\n}\n\nexport default QueryList\n","function renderListItem({serial, data}){\r\n  return (\r\n    <div>\r\n      {serial}) {data.id}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default renderListItem"],"names":["SIMPLE","ADVANCED","LOAD_MORE","INFINITE_LOADING","PAGINATION_TYPES","_PAGINATION_TYPES","LINKS","createStore","set","get","pagination","queryKey","init","props","url","params","page","perPage","selected","setSelected","setPage","produce","state","setPerPage","computed","this","context","createContext","Provider","useStore","selector","equalityFn","stateHook","indexOf","split","map","part","trim","prop","shallow","useInit","useQueryClient","_useStore","useDeepCompareEffect","isEmpty","queryClient","cancelQueries","fetchData","meta","pageParam","signal","_ref","_queryKey$","request","_objectWithoutPropertiesLoose","_excluded","isString","method","_extends","isUndefined","axios","response","data","e","Promise","reject","React","createElement","MuiPagination","variant","showFirstButton","showLastButton","onChange","event","value","count","last_page","current_page","Advanced","sizes","size","lastPage","handleGoto","inputPage","parseInt","target","key","type","alert","sizeList","useMemo","flow","uniq","sortBy","concat","console","log","Stack","direction","spacing","alignItems","justifyContent","shape","TextField","select","label","style","width","k","MenuItem","defaultValue","Typography","onKeyUp","onBlur","defaultProps","_QueryPagination$type","component","Component","isValidElement","QueryPagination","types","Simple","propTypes","PropTypes","oneOfType","string","func","_usePagination","usePagination","filteredItems","filter","items","item","List","index","_ref2","Button","queryInfo","isFetchingNextPage","fetchNextPage","hasNextPage","onClick","disabled","threshold","LinearProgress","className","color","InView","as","inView","forwardRef","ref","_data$pages","_props$scrollPosition","ListItem","renderListItem","renderList","wrapperListItem","onRowClicked","useInfiniteQuery","getPreviousPageParam","firstPage","allPages","previousPage","undefined","getNextPageParam","nextPage","status","error","isFetching","isFetchingPreviousPage","fetchPreviousPage","hasPreviousPage","firstRow","useEffect","message","Fragment","aaa","pages","pageIndex","itemIndex","from","listItemProps","serial","itemSelected","Box","length","entry","has","backToTop","y","scrollPosition","scrollTo","document","querySelector","scrollTarget","window","top","duration","sx","bottom","right","zIndex","InfiniteQueryList","InfiniteQueryList$1","SimpleQueryList","_data$data","useQuery","keepPreviousData","staleTime","isLoading","isSuccess","useUpdateEffect","$","scrollTop","Alert","severity","formatNumber","number","format","numeral","QueryList","scrollIndex","_ref$wait","wait","useRef","_useRafState","useRafState","x","position","setPostion","handler","useCallback","positionKeys","current","addEventListener","debounce","removeEventListener","setTimeout","useScrollList","queryListProps","includes","object","bool","id","children","to","total","divider","Divider","orientation","py","QueryList$1"],"mappings":"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"}